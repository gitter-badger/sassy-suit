/**
*
* Google Web Fonts URL encoder.
*
* @group Type
*
* @author Vova Skok
*
* @link https://github.com/SassySuit/sassySuit/blob/master/tools/type/_typeSetWebFontsFunction.scss
*
* @todo
	- Add argument validation
	- Function/mixin existance check up
	- Error/warn handling
	- Chunk functions in seperate files
*/

/**
*
* Google Web Fonts string replacing function.
*
* @group Type
*
* @author Vova Skok
*
* @link https://github.com/SassySuit/sassySuit/blob/master/tools/type/_typeSetWebFontsFunction.scss
*
* @param {String} $string - string to replace
* @param {String} $find - string to find
* @param {String} $replace - string to replace
*
* @return {String}
*
*/

@function wf-str-replace($string, $find, $replace, $all: true) {
	$index: str-index($string, $find);

	@if $index {
		$before: str-slice($string, 1, $index - 1);
		$after: str-slice($string, $index + str-length($find), str-length($string));
		$string: $before + $replace + $after;

		@if $all and not str-index($find, $replace) {
			$string: wf-str-replace($string, $find, $replace);
		}

	}

	@return $string;

}

/**
*
* Google Web Fonts URL encoding function.
*
* @group Type
*
* @author Vova Skok
*
* @link https://github.com/SassySuit/sassySuit/blob/master/tools/type/_typeSetWebFontsFunction.scss
*
* @require wf-str-replace
*
* @param {String} $string - string to encode
*
* @return {String}
*
*/

@function wf-url-encode($string) {

	$replacements: (
		"!": "%21",
		"#": "%23",
		"$": "%24",
		"&": "%26",
		"'": "%27",
		"(": "%28",
		")": "%29",
		"*": "%2A",
		"+": "%2B",
		",": "%2C",
		"/": "%2F",
		":": "%3A",
		";": "%3B",
		"=": "%3D",
		"?": "%3F",
		"@": "%40",
		"[": "%5B",
		"]": "%5D",
		" ": "%20"
	);

	@each $from, $to in $replacements {
		$string: wf-str-replace($string, $from, $to);
	}

	@return $string;

}

/**
*
* Google Web Fonts string implode function.
*
* @group Type
*
* @author Vova Skok
*
* @link https://github.com/SassySuit/sassySuit/blob/master/tools/type/_typeSetWebFontsFunction.scss
*
* @require wf-str-replace
*
* @param {List | String} $list - string to replace
* @param {String} $separator - list seperator
*
* @return {String}
*
*/

@function wf-implode($list, $separator: ',') {

	$string: '';

	@for $i from 1 through length($list) {

		$el: nth($list, $i);
		$string: $string + $el;

		@if ($i < length($list)) {
			$string: $string + $separator;
		}

	}

	@return $string;

}

/**
*
* Google Web Fonts string serializing function.
*
* @group Type
*
* @author Vova Skok
*
* @link https://github.com/SassySuit/sassySuit/blob/master/tools/type/_typeSetWebFontsFunction.scss
*
* @param {List | String} $fonts - list or string of fonts
*
* @require wf-serialize
* @require wf-implode
* @require wf-str-replace
* @require wf-url-encode
*
* @throw Unsupported font type
*
* @return {String}
*
*/

@function wf-serialize($fonts) {

	@if type-of($fonts) == 'list' or type-of($fonts) == 'arglist' {
		$serialized: ();

		@each $font in $fonts {
			$serialized: append($serialized, wf-serialize($font));
		}

		@return wf-implode($serialized, '|');

	}

	@if type-of($fonts) == 'map' {

		$serialized: ();

		@each $family, $variants in $fonts {
			$variants: wf-implode($variants, ',');
			$variants: wf-str-replace($variants, ' ', '');
			$serialized: append($serialized, "#{$family}:#{$variants}");
		}

		@return wf-serialize($serialized);

	}

	@if type-of($fonts) == 'string' {

		@return wf-url-encode($fonts);

	}

	@warn "Unsupported font type: #{type-of($fonts)}";

}

/**
*
* Google Web Fonts protocol variable.
*
* @group Type
*
* @author Vova Skok
*
* @link https://github.com/SassySuit/sassySuit/blob/master/tools/type/_typeSetWebFontsFunction.scss
*
* @type String
*
*/
$web-fonts-protocol: "https";
