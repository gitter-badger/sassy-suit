// $grid: (
// 	output: 					responsive,
// 	columns: 					12,
// 	breakpoints: 				auto,
// 	bpNames: 					'xs' 'sm' 'md' 'lg' 'xl' 'xxl',
// 	bpValues: 					320px 480px 620px 768px 960px 1120px 1200px,
// 	containers: 				auto,
// 	containerNames: 			'xs' 'sm' 'md' 'lg' 'xl' 'xxl' 'fluid',
// 	gutters: 					auto,
// 	gutterBase: 				5px,
// 	gutterRatio: 				auto,
// 	gutterDefault: 				15px,
// 	gutterNames: 				'xs' 'sm' 'md' 'lg' 'xl' 'xxl',
// 	gutterValues: 				5px 10px 15px 20px 25px 30px,
// 	round: 						true,
// 	debug: 						true
// );

@mixin columns($grid: $grid) {

	@if gridConfigVal($grid) {
		@warn "Pooook!";
	}

	// add map validation
	@if exists(grid, var) and
		val($grid, map) {

		@warn "$Grid exists::::::::::::::::::::::::::::::::::::";

		// add map validation
		@if exists(breakpoints, var) and
			val($breakpoints, map) {

			@warn "$breakpoints exists and is a valid map ::::::::::::::";

		} @else {

			@warn "$breakpoints doesn't exists or is not a valid map ::::::::::!!";

		}

		// } @else if map-get-key(breakpoints) == static {

		// 	// do something else

		// } @else {

		// 	@error "something";

		// }

		// @if map-get-key(ratio) == auto {

				// 	// do something

			// }

		// } @else if val(ratio, num) {

		// 	// do something else

		// } @else {

		// 	@error "something";

		// }

		@if val(map-get($grid, columns), number) and
			val(map-get($grid, baseGutter), measure) and
			val(map-get($grid, defaultGutter), measure) {

				@warn "SUCCESS::::::::::::::::::::::::::::::::::::";
				// @debug map-get($grid, columns);
				// @debug map-get($grid, baseGutter);
				// @debug map-get($grid, defaultGutter);


		} @else {

			@warn "Not valid map key values";
			// @debug map-get($grid, columns);
			// @debug map-get($grid, baseGutter);
			// @debug map-get($grid, defaultGutter);

		}

	} @else {

		@error $grid "map doesn't exist!";

	}

}

@include columns;
