@function __list_walk($list, $function, $args) {
    @if sl-missing-dependencies(sl-to-map, sl-to-list) == true { @return null; }

    @if not function-exists($function) {
        @warn "There is no `#{$function}` function for `sl-walk`.";
        @return null;
    }

    @each $index, $value in sl-to-map($list) {
        $list: set-nth($list, $index, call($function, $value, $args...));
    }

    @return sl-to-list($list);
}

/**
 * Apply `$function` to every item from `$list` passing $args as parameters.
 *
 * @since 1.0.0
 *
 * @requires sl-walk
 * @requires v-invoke
 *
 * @param {List}    $list     - list to update
 * @param {String}  $function - function to call on each value
 * @param {ArgList} $args     - optional function arguments
 *
 * @return {list|false}
 */

@function v-list_walk($list, $function, $args...) {
    @return v-invoke(
        $params: ($list, $function, $args),
        $types: (list, string, any),
        $callback: __list_walk
    );
}