@function __string_printf($string, $elements) {
    $breaker: '%s';
    $result: $string;
    @debug $elements;

    @for $i from 1 through length($elements) {
        $index: str-index($result, $breaker);
        @if $index {
            $result: str-slice($result, 1, $index - 1) + stringify(nth($elements, $i)) + str-slice($result, $index + str-length($breaker));
        }
        @else {
            @return $result;
        }
    }

    @return $result;
}

/**
 * Replace occurrences of %s in $string by $elements
 *
 * @since 1.0.0
 *
 * @requires v-invoke
 * @requires __string_printf
 *
 * @param {string}  $string   - string
 * @param {argList} $elements - strings to use for replacements in %s
 *
 * @return {string|false}
 *
 * @example
 *  v-string_printf('this is a %s', 'test') //returns 'this is a test'
 */

@function v-string_printf($string, $elements...) {
    @return v-invoke(
        $params: ($string, $elements),
        $types: (string, any),
        $callback: __string_printf
    );
}