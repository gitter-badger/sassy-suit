///
/// Mixin for generating gutters
///
/// Gutter output depends on global configuration
///
/// @group grid
///
/// @param {map} layout ($grid) Map for storing grid configurations
///
/// @throw "#{$layout} is invalid argument for `grid-space-units` function"
///
/// @todo clean comments, '@debug' statements, call. add ms-round option!
//////
///

@mixin gutters($layout: $grid) {
	@if exists(grid-space-units, mixin) {
		@include grid-space-units($layout);
		// $grid-space-units

		$direction-output: map-get($layout, direction-output);
		$values: map-get($layout, values);

		.g__gutters {
			padding-left: $grid-space-units;
			padding-right: $grid-space-units;
		}

		// values: fallback
		@if $direction-output and ($values == 'space-unit-fallback') {

			.g__gutter--before {
				padding-left: $grid-space-units;
			}

			.g__gutter--after {
				padding-right: $grid-space-units;
			}

		}

	} @else {

		@error '`grid-space-units` function is not existing';

	}
}

@include gutters($grid);
