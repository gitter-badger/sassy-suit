// Use _config.scss for setting values
// Use min & max bp
// Use constant ratio
// Has for each px @media query loops
// Extends @media queries which have at least 1px difference in font size. For
// reducing css output, which will be handled by different browser differently, so
// that way we keep control of typogrpaphy values and don't care about browser
// subpixel rendering algorithms
// Has for each px ratio calc function
// Has self configing mixin


$liquidWidth: $bpXxl - $bpSm;
$counter: 1200 - 300;
$liquidRatio: map-get($typography, liquidRatio);

$mediaRatio: ($liquidRatio / $liquidWidth) + 1;

@mixin typography-liquid($baseSize) {

	$seqLiquid: $baseSize;
	$length: length($seqLiquid);

	@for $i from $bpSm through $bpXxl {

		$oldValue: nth($seqLiquid, length($seqLiquid));
		$newValue: $oldValue * $mediaRatio * 1px;
		$seqLiquid: append($seqLiquid, $newValue);
		$seqLiquid: append($seqLiquid, (length($seqLiquid) * $baseSize));
	}

	@for $i from $bpSm through $bpXxl {

		@media (min-width: $i) {

			// @for $n from 1 through ($counter - 1) {
				font-size: length($seqLiquidRatios);
				// font-size: $n;
			// }
		}

	}


}

.ZZZ { @include typography-liquid($fontSizeMd); }

