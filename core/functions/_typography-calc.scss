$base: 						map-get($typography, base);
$index: 					map-get($typography, index);
$length: 					map-get($typography, length);
$fontSizeRatio: 			map-get($typography, fontSizeRatio);
$lineHeightRatio:			map-get($typography, lineHeightRatio);
$paddingRatio: 				map-get($typography, paddingRatio);

@function font-size-sequence-calc($length, $base, $common-ratio, $index) {

	$sequence: ($base);

	@if $index == 0 {
		$sequence: $base;
	}

	@if $index < 0 {

		@for $i from $index through $length - -$index {

			@if $i < 0 {
				$new:nth($sequence, length($sequence)) / $common-ratio;
	    		$sequence: append($sequence, $new);
	    		$sequence-in-progress: $sequence;
			}

			@if $i == 0 {
				$sequence: append($sequence, $base);
			}

			@if $i > 0 {
				$new: nth($sequence, length($sequence)) * $common-ratio;
				$sequence: append($sequence, $new);
			}

	  	}

	}

	@if $index > 0 {

	  	@for $i from $index through $length {
	    	$new: nth($sequence, length($sequence)) * $common-ratio;
	    	$sequence: append($sequence, $new);
	  	}
	}

  	@return $sequence;

}

$fontSizeSequenceRaw: sl-unique(sl-sort(font-size-sequence-calc($length, $base, $fontSizeRatio, $index)));

$fontSizeSequence: sl-walk($fontSizeSequenceRaw, round);

@function line-height-calc($value, $lineHeightRatio) {
	$new-value: $value * $lineHeightRatio;
  	@return $new-value
}

$lineHeightSequenceRaw: sl-walk($fontSizeSequence, line-height-calc, $lineHeightRatio);

$lineHeightSequence: sl-walk($lineHeightSequenceRaw, round);
