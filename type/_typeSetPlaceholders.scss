%typeSetXs {
	font-size: nth($fontSize, 1);
	line-height: nth($lineHeight, 1);
	letter-spacing: nth($letterSpacing, 1);
	padding: nth($fontPadding, 1);

	@if $typeOutputStyle == responsive {
		// nth($typeSetResponsive, 1) - first lists from fontSize responsive list
		// nth(nth($typeSetResponsive, 1), 1) - first value from first lists from fontSize responsive list
		// $fontSize, $lineHeight, $letterSpacing, $fontPadding - order
		// 1 - break point number from 1 through length($typeBps)
		// 2 - property. 1 - fontSize, 2 - lineHeight, 3 -letterSpacing, 4 - padding
		// 3 - value of property from 1 through length of type index list ($indexStart and $indexEnd)
		font-size: nth(nth($typeSetResponsive, 1), 1);
		line-height: nth(nth($typeSetResponsive, 2), 1);
		letter-spacing: nth(nth($typeSetResponsive, 3), 1);
		padding: nth(nth($typeSetResponsive, 4), 1);
	}

	@if $typeOutputStyle == liquid {
		font-size: x;
		line-height: x;
		letter-spacing: x;
		padding: x;
	}

}



%typeSetSm {
	font-size: nth($fontSize, 2);
	line-height: nth($lineHeight, 2);
	letter-spacing: nth($letterSpacing, 2);
	padding: nth($fontPadding, 2);

	@if $typeOutputStyle == responsive {
		font-size: nth($fontSizeResponsive, 2);
		line-height: nth($lineHeightResponsive, 2);
		letter-spacing: nth($letterSpacingResponsive, 2);
		padding: nth($fontPaddingResponsive, 2);
	}

	@if $typeOutputStyle == liquid {
		font-size: x;
		line-height: x;
		letter-spacing: x;
		padding: x;
	}

}



%typeSetMd {
	font-size: nth($fontSize, 3);
	line-height: nth($lineHeight, 3);
	letter-spacing: nth($letterSpacing, 3);
	padding: nth($fontPadding, 3);

	@if $typeOutputStyle == responsive {
		font-size: nth($fontSizeResponsive, 3);
		line-height: nth($lineHeightResponsive, 3);
		letter-spacing: nth($letterSpacingResponsive, 3);
		padding: nth($fontPaddingResponsive, 3);
	}

	@if $typeOutputStyle == liquid {
		font-size: x;
		line-height: x;
		letter-spacing: x;
		padding: x;
	}

}



%typeSetLg {
	font-size: nth($fontSize, 4);
	line-height: nth($lineHeight, 4);
	letter-spacing: nth($letterSpacing, 4);
	padding: nth($fontPadding, 4);

	@if $typeOutputStyle == responsive {
		font-size: nth($fontSizeResponsive, 4);
		line-height: nth($lineHeightResponsive, 4);
		letter-spacing: nth($letterSpacingResponsive, 4);
		padding: nth($fontPaddingResponsive, 4);
	}

	@if $typeOutputStyle == liquid {
		font-size: x;
		line-height: x;
		letter-spacing: x;
		padding: x;
	}

}


%typeSetXl {
	font-size: nth($fontSize, 5);
	line-height: nth($lineHeight, 5);
	letter-spacing: nth($letterSpacing, 5);
	padding: nth($fontPadding, 5);

	@if $typeOutputStyle == responsive {
		font-size: nth($fontSizeResponsive, 5);
		line-height: nth($lineHeightResponsive, 5);
		letter-spacing: nth($letterSpacingResponsive, 5);
		padding: nth($fontPaddingResponsive, 5);
	}

	@if $typeOutputStyle == liquid {
		font-size: x;
		line-height: x;
		letter-spacing: x;
		padding: x;
	}

}



%typeSetXxl {
	font-size: nth($fontSize, 6);
	line-height: nth($lineHeight, 6);
	letter-spacing: nth($letterSpacing, 6);
	padding: nth($fontPadding, 6);

	@if $typeOutputStyle == responsive {
		font-size: nth($fontSizeResponsive, 6);
		line-height: nth($lineHeightResponsive, 6);
		letter-spacing: nth($letterSpacingResponsive, 6);
		padding: nth($fontPaddingResponsive, 6);
	}

	@if $typeOutputStyle == liquid {
		font-size: x;
		line-height: x;
		letter-spacing: x;
		padding: x;
	}

}



%typeSetXxxl {
	font-size: nth($fontSize, 7);
	line-height: nth($lineHeight, 7);
	letter-spacing: nth($letterSpacing, 7);
	padding: nth($fontPadding, 7);

	@if $typeOutputStyle == responsive {
		font-size: nth($fontSizeResponsive, 7);
		line-height: nth($lineHeightResponsive, 7);
		letter-spacing: nth($letterSpacingResponsive, 7);
		padding: nth($fontPaddingResponsive, 7);
	}

	@if $typeOutputStyle == liquid {
		font-size: x;
		line-height: x;
		letter-spacing: x;
		padding: x;
	}

}


%typeSetLarger {
	font-size: nth($fontSize, 8);
	line-height: nth($lineHeight, 8);
	letter-spacing: nth($letterSpacing, 8);
	padding: nth($fontPadding, 8);

	@if $typeOutputStyle == responsive {
		font-size: nth($fontSizeResponsive, 8);
		line-height: nth($lineHeightResponsive, 8);
		letter-spacing: nth($letterSpacingResponsive, 8);
		padding: nth($fontPaddingResponsive, 8);
	}

	@if $typeOutputStyle == liquid {
		font-size: x;
		line-height: x;
		letter-spacing: x;
		padding: x;
	}

}



%typeSetLargest {
	font-size: nth($fontSize, 9);
	line-height: nth($lineHeight, 9);
	letter-spacing: nth($letterSpacing, 9);
	padding: nth($fontPadding, 9);

	@if $typeOutputStyle == responsive {
		font-size: nth($fontSizeResponsive, 9);
		line-height: nth($lineHeightResponsive, 9);
		letter-spacing: nth($letterSpacingResponsive, 9);
		padding: nth($fontPaddingResponsive, 9);
	}

	@if $typeOutputStyle == liquid {
		font-size: x;
		line-height: x;
		letter-spacing: x;
		padding: x;
	}

}
